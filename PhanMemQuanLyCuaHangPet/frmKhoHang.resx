<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThoat.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAvxJREFUSEvF
        l1tPE0EUxzfeEzVGX9T4bvwYPBm5uF1IVhOB2RWhGqCQ+OY1ePkyxuCVSCwa1Ij6AA8mkhBK2d02FagY
        KQKhluZ4ZneW0ulpw8aN/JNfMjtzLt2ZPTNTJYjS+pVjtsbqHdXssiLGPY7bVs1zTuOlo8IsHFl15gEM
        fM2OGG+QAgJV+IOMOJoRTdTH9gv34AJd321ppulEjJSUYBswG/0YDAzsEuG2J6vBPIEBPlYGDAYuxYdZ
        tfO4CFtb1nnzDDrNyEH+gUSymZ0W4Wmlm9gpNMxIjiHA7KpvPh6N7uVTQzuGwijU1e0R6UrCj6GPMA6b
        HpHO05TacdhWjSxhCKn2Xigs/ICNxZ+Qid2qGPfhY9yG26baekgbZG7+bPtBkRbfVjNjhJHL9/7b4KuQ
        XYS02Vdhw/v4mK9aPxDXu1ukVRR8GKONPH6/HhUhAfLTs+Bc6Noc423e5yv3bLjMV4Z/R17SlraT2FGU
        DcrQTFj9MiFCA6xNfAW7pcOFt32tvP/s2pIxShT5PqHg2jYSgxXwN1ufTooUAMsv47A8NCKeANanEuDo
        naSvTEo1VD7NndQgRdrsL1tLX4W5BfcjpHxIVHZdwam5Qw5WIRO7CcXVNZES3Ham9wZpWxWV3ef1e5cc
        rAJPUlxZFWkxMbYzPQETa8aDYFNtxNw6lVWYz0KaxUgfEm+qWT05KOFcvAr5pC1SASw9eg5Lj1+IJyyz
        Gdu1oXxlnGbW5N0qah/wlWUzOuaVDbLy7pPoxTIbxzJrvkzHKJFP6tEjXi1r7C1hsEnu6SsRGssGS8rR
        pQ0ksWUDGRwq85WxNCPuJuUKtGXiOss2cpnV/sq3bJn8XoUdNmXoHhIYdONXzi0lyoaT6cNDYinnHRKt
        3aQNMjOp6/tEWk+WygzCMFxUo1WkK8m73Blx0iEchqte/txzOWJMSg5h8I3HFmlo7chlz5d48ydSgOBo
        bDCr64dE2O1pRy70W/Xf/8JQcrdXvDiIG+lDjtc2G4L9aVOUv4nJbahyrDcDAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="txbTimKhachHang.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAnVJREFUSEvt
        VktrE1EYHXxVFIVuWmiTmaYJtiK0C1ddCIIoUnDhIi5sM5lG6EZ8IC5clnZThCLoL3DhA0VcCEKXoqUi
        ghsLhaRxHqkU7MYK9dV2PN9wpk3T1N6kJgh64CPJ+e53ztx7v3sn2n+UYi7VvN+zIqfttHERcd0x9f4P
        Vlsn038ebjoad83oPSetf0P4ZSLnWlHLT2o7WbJ9iCCENzMsjZe5VLyJpdXDNo2zEFuh6LJj6Q/xecI5
        rzdKYJnbsBLXwLkc42N1JrOXEg2UqBwzZrsOoQUKfobgKaY24ONgyz7s+dPQ3LaMMaYqBwTuUmgFQr2k
        N8VU8sgeNNsEa75LXzCljulMxwEUh/v6iPSWyGdi3RgfbA22YJi0OrCXZ2jq4/tJ0krA6rxm7RtS6kDR
        5VVjNBFpJWCJ77B2npQ6MMsboTE6dy9pJaB2lLWLpNSBpx4IjQtm6yHSSkB3P2BtnpQ6PDPSFRpjBldJ
        b4mgs9P6J9YqN+U64GhMU2A225c4SPq3QM0V1sgDJ0lXBnkBhCI4Gk/849oupsoCt1wPxi6yZqrqe9sf
        0nZgr5+H5ogXdso4zPQq3g4e3S3bgfxXGYean7jfjzFdHWSJIfaKxhJLwe1k6rcRN9FI98HNFeV/4CGW
        YT4u3Z2/EDMoVTnkwofgrUB0zaBcvOdyPyviPK8/kqBUdcAs4ogRiL1DfEEsIQqIx4hz4Z5ipkP4XfxA
        ntQGIrWEzFDMSsxn5G3HIbUDX6m5EnO3LjOfHWiJ/nXmTkZv55DaoZw5Zu3UxRwXTwzn3i4yd7d9zFRR
        6GuNwDArIatAuj6Qf6US/PnPQtN+AQNF3gsu0o1mAAAAAElFTkSuQmCC
</value>
  </data>
</root>